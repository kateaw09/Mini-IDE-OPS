// ความเร็วมอเตอร์ 0-100
void Examples() {
  motorWrite(50, 50, 50, 50);     /* สั่งมอเตอร์ หมุนเดินหน้า motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4) */
  motorWrite(-50, -50, -50, -50); /* สั่งมอเตอร์ หมุนถอยหน้า motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4) */
  motorWrite(-50, -50, 50, 50);   /* สั่งมอเตอร์ หมุนซ้าย motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4) */
  motorWrite(50, 50, -50, -50);   /* สั่งมอเตอร์ หมุนขวา motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4) */
  motorWrite(0, 0, 50, 50);       /* สั่งมอเตอร์ เทิร์นซ้าย motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4) */
  motorWrite(50, 50, 0, 0);       /* สั่งมอเตอร์ เทิร์นขวา motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4) */
  motorStop();                    /* สั่งมอเตอร์หยุดทั้ง 4 ตัว */
  delay(100);                     /* หน่วงเวลา 1000millisecond = 1 วินาที */
  STOP();                         /* สั่งหยุด กด SW1 or SW2 เพื่อทำงานต่อ */

  FF(100); /* เดินหน้าตรงเรื่อยๆ
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว*/

  FF(100, 200); /* เดินถอยหลังตรง นับระยะทาง
      |    ^ = ระยะทางนับเวลา 1000=1วินาที
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  FF(100, 200, 'L'); /* เดินหน้าตรง นับระยะทาง พร้อมเลี้ยว
      |    |    ^ = เลือกทิศทางเลี้ยว (ใช้เซ็นเซอร์ไจโร)
      |    |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
      |    |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
      |    |        - 'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด
      |    |        - 'r' = เทิร์นเลี้ยวขวาแล้วหยุด
      |    ^ = ระยะทางนับเวลา 1000=1วินาที
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  FF(100, 200, 'R', 175); /* เดินหน้าตรง นับระยะทาง พร้อมเลียวแบบนับเวลา
      |    |    |     ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
      |    |    ^ = เลือกทิศทางเลี้ยว
      |    |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
      |    |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
      |    ^ = ระยะทางนับเวลา 1000=1วินาที
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  BB(100); /* เดินถอยหลังตรงเรื่อยๆ
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  BB(100, 200); /* เดินถอยหลังตรง นับระยะทาง
      |    ^ = ระยะทางนับเวลา 1000=1วินาที
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  BB(100, 200, 'L'); /* เดินถอยหลังตรง นับระยะทาง พร้อมเลี้ยว
      |    |    ^ = เลือกทิศทางเลี้ยว (ใช้เซ็นเซอร์ไจโร)
      |    |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
      |    |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
      |    |        - 'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด
      |    |        - 'r' = เทิร์นเลี้ยวขวาแล้วหยุด
      |    ^ = ระยะทางนับเวลา 1000=1วินาที
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  BB(100, 200, 'R', 175); /* เดินถอยหลังตรง นับระยะทาง พร้อมเลียวแบบนับเวลา
      |    |    |     ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
      |    |    ^ = เลือกทิศทางเลี้ยว
      |    |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
      |    |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
      |    ^ = ระยะทางนับเวลา 1000=1วินาที
      ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetFront(15); /* เช็ตหน้าตรง เจอเส้นดำ จะหยุด
            ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetFront(15, 300); /* เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ
            |   ^ = ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที
            ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetFront(15, 300, 'R'); /* เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ พร้อมเลี้ยว
            |   |    ^ = เลือกทิศทางเลี้ยว (ใช้เซ็นเซอร์ไจโร)
            |   |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
            |   |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
            |   ^ = ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที
            ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetFront(15, 300, 'L', 130); /* เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ พร้อมเลี้ยว
            |   |    |    ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
            |   |    ^ = เลือกทิศทางเลี้ยว
            |   |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
            |   |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
            |   ^ = ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที
            ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetBack(15); /* เช็ตหลังตรง เจอเส้นดำ จะหยุด
           ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetFront(15, 300); /* เช็ตหลังตรง เมื่อเจอเส้นดำ จะเดินหน้าออกจากเส้นดำ
            |   ^ = ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที
            ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetFront(15, 300, 'R'); /* เช็ตหลังตรง เมื่อเจอเส้นดำ จะเดินหน้าออกจากเส้นดำ พร้อมเลี้ยว
            |   |    ^ = เลือกทิศทางเลี้ยว (ใช้เซ็นเซอร์ไจโร)
            |   |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
            |   |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
            |   ^ = ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที
            ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  SetFront(15, 300, 'L', 130); /* เช็ตหลังตรง เมื่อเจอเส้นดำ จะเดินหน้าออกจากเส้นดำ พร้อมเลี้ยว
            |   |    |    ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
            |   |    ^ = เลือกทิศทางเลี้ยว
            |   |        - 'L' = หมุนเลี้ยวซ้ายแล้วหยุด
            |   |        - 'R' = หมุนเลี้ยวขวาแล้วหยุด
            |   ^ = ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที
            ^ = ความเร็วมอเตอร์ทั้ง 4 ตัว */

  LL(130); /* หมุนซ้าย นับเวลาเลี้ยว
      ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที) */

  RR(130); /* หมุนขวา นับเวลาเลี้ยว
      ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที) */

  TT(15, 70, 300); /* เทิร์นซ้าย  นับเวลาเลี้ยว
      |   |   ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
      |   ^ = ความเร็วมอเตอร์ขวา
      ^ = ความเร็วมอเตอร์ซ้าย */

  TT(70, 15, 300); /* เทิร์นขวา นับเวลาเลี้ยว
      |   |   ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
      |   ^ = ความเร็วมอเตอร์ขวา
      ^ = ความเร็วมอเตอร์ซ้าย */

  TTB(15, 70, 300); /* ถอยหลัง เทิร์นซ้าย นับเวลาเลี้ยว
       |   |   ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
       |   ^ = ความเร็วมอเตอร์ซ้าย
       ^ = ความเร็วมอเตอร์ขวา */

  TTB(70, 15, 300); /* ถอยหลัง เทิร์นขวา นับเวลาเลี้ยว
       |   |   ^ = ระยะองศาเลี้ยว (นับเวลา 1000=1วินาที)
       |   ^ = ความเร็วมอเตอร์ซ้าย
       ^ = ความเร็วมอเตอร์ขวา */

  spinDegree(-90); /* หมุนซ้าย spinDegree(ระยะองศาเลี้ยว ใช้เซ็นเซอร์ไจโร) */

  spinDegree(90); /* หมุนขวา spinDegree(ระยะองศาเลี้ยว ใช้เซ็นเซอร์ไจโร) */

  turnDegreeFront(-90); /* เทิร์นซ้าย turnDegreeFront(ระยะองศาเลี้ยว ใช้เซ็นเซอร์ไจโร) */

  turnDegreeFront(90); /* เทิร์นขวา turnDegreeFront(ระยะองศาเลี้ยว ใช้เซ็นเซอร์ไจโร) */

  turnDegreeBack(-90); /* ถอยหลัง เทิร์นซ้าย turnDegreeBack(ระยะองศาเลี้ยว ใช้เซ็นเซอร์ไจโร) */

  turnDegreeBack(90); /* ถอยหลัง เทิร์นขวา turnDegreeBack(ระยะองศาเลี้ยว ใช้เซ็นเซอร์ไจโร) */

  turnDegreeFront(15, 70); /* เทิร์นซ้าย
                  |   ^ = ความเร็วมอเตอร์ขวา
                  ^ = ความเร็วมอเตอร์ซ้าย */

  turnDegreeFront(70, 15); /* เทิร์นขวา
                  |   ^ = ความเร็วมอเตอร์ขวา
                  ^ = ความเร็วมอเตอร์ซ้าย */

  turnDegreeBack(15, 70); /* ถอยหลัง เทิร์นซ้าย
                  |   ^ = ความเร็วมอเตอร์ซ้าย
                  ^ = ความเร็วมอเตอร์ขวา */

  turnDegreeBack(70, 15); /* ถอยหลัง เทิร์นขวา
                  |   ^ = ความเร็วมอเตอร์ซ้าย
                  ^ = ความเร็วมอเตอร์ขวา */

  DropF();  /* เดินหน้าไปหาจุดวางสีเขียว พร้อมวางลูกบาศก์ด้านหน้า */

  DropB();  /* เดินถอยหลังไปหาจุดวางสีเขียว พร้อมวางลูกบาศก์ด้านหลัง */

  ShowValue_Sensor();  /* แสดงกราฟค่าของ Sensor ทั้งหมด 8 ตัว */
}